---
- name: Deploy Node.js Application
  hosts: all
  become: yes
  vars:
    node_version: "20"
    app_dir: "/opt/calculator-app"
    nvm_dir: "{{ ansible_env.HOME }}/.nvm"

  tasks:
    - name: Install required system packages
      apt:
        name: 
          - curl
          - git
          - build-essential
          - chromium-browser
          - chromium-chromedriver
          - libgbm-dev
          - libatk-bridge2.0-0
          - libgtk-3-0
          - libnss3
          - libx11-xcb1
          - libxcb-dri3-0
          - libxcomposite1
          - libxcursor1
          - libxdamage1
          - libxfixes3
          - libxi6
          - libxrandr2
          - libxss1
          - libxtst6
          - fonts-liberation
          - xvfb
        state: present
        update_cache: yes

    - name: Install NVM
      shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      args:
        creates: "{{ nvm_dir }}/nvm.sh"

    - name: Install Node.js
      shell: |
        . {{ nvm_dir }}/nvm.sh
        nvm install {{ node_version }}
        nvm use {{ node_version }}
      args:
        executable: /bin/bash

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Copy application files
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}/"
      with_items:
        - package.json
        - src/
        - public/
        - tests/
        - ui-tests/

    - name: Install npm dependencies
      shell: |
        . {{ nvm_dir }}/nvm.sh
        cd {{ app_dir }}
        npm install
      args:
        executable: /bin/bash

    - name: Run unit tests
      shell: |
        . {{ nvm_dir }}/nvm.sh
        cd {{ app_dir }}
        npm test tests/
      args:
        executable: /bin/bash
      register: unit_test_result
      ignore_errors: yes

    - name: Run UI tests with Xvfb
      shell: |
        . {{ nvm_dir }}/nvm.sh
        cd {{ app_dir }}
        xvfb-run --server-args="-screen 0 1280x960x24" npm run test:ui
      args:
        executable: /bin/bash
      register: ui_test_result
      ignore_errors: yes

    - name: Check test results
      fail:
        msg: "Tests failed"
      when: unit_test_result.rc != 0 or ui_test_result.rc != 0